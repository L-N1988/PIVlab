function W = wavenames(T)
%WAVENAMES Wavelet names information.
%   W = WAVENAMES(T) returns a cell array which contains
%   the name of all wavelets of type T. The valid values
%   for T are:
%       - 'all'  : all wavelets.
%       - 'lazy' : the "lazy" wavelet.
%       - 'orth' : orthogonal wavelets.
%       - 'bior' : biorthogonal wavelets.
%
%    W = WAVENAMES is equivalent to W = WAVENAMES('all').

%   Copyright 2020 The MathWorks, Inc.

%#codegen
if isStringScalar(T)
    T = convertStringsToChars(T);
end

nargoutchk(1,1)

wname = {'lazy';...
    'haar'; ...
    'db1';'db2';'db3';'db4';'db5';'db6';'db7';'db8'; ...
    'sym2';'sym3';'sym4';'sym5';'sym6';'sym7';'sym8';...
    'coif1';'coif2';...
    'bior1.1'; 'bior1.3' ; 'bior1.5';...
    'bior2.2'; 'bior2.4' ; 'bior2.6';... 
    'bior2.8';'bior3.1'; 'bior3.3' ; ...
    'bior3.5'; 'bior3.7';'bior3.9';...
    'bior4.4' ; 'bior5.5'; 'bior6.8';...
    'bs3';'9.7';'rbs3';'r9.7';'rbio1.1';...
    'rbio1.3'; 'rbio1.5'; 'rbio2.2';...
     'rbio2.4' ; 'rbio2.6'; 'rbio2.8';...
    'rbio3.1'; 'rbio3.3' ; 'rbio3.5'; 'rbio3.7';...
    'rbio3.9'; 'rbio4.4' ; 'rbio5.5';...
    'rbio6.8';'cdf1.1';'cdf1.3'; ...
    'cdf1.5';'cdf2.2';'cdf2.4';...
    'cdf2.6';'cdf3.1';'cdf3.3';...
    'cdf3.5';...
    'cdf4.2';'cdf4.4';'cdf4.6';...
    'cdf5.1';'cdf5.3';'cdf5.5';...
    'cdf6.2';'cdf6.4';'cdf6.6'};

if nargin<1 , T = 'all'; end
W = table('Size',[numel(wname) 1],'VariableTypes',{'cellstr'},'VariableNames',{'W'}); 
switch lower(T)
    %     case 'lazy' , WL = cell2table(wnameCell_LAZY,'VariableNames',{'W'});
    %         varargout{1} = WL;
    %     case 'orth' , WO = cell2table(wnameCell_ORTH,'VariableNames',{'W'});
    %         varargout{1} = WO;
    %     case 'bior' , WB = cell2table(wnameCell_BIOR,'VariableNames',{'W'});
    %         varargout{1} = WB;
    case 'all'
        %         WL = cell2table(wnameCell_LAZY,'VariableNames',{'W'});
        %         WO = cell2table(wnameCell_ORTH,'VariableNames',{'W'});
        %         WB = cell2table(wnameCell_BIOR,'VariableNames',{'W'});
        W = table(wname,'VariableNames',{'W'});
    otherwise
        coder.internal.error(message('Wavelet:FunctionArgVal:Unknown_TypWav'));
end
